# =============================================================================
# 🦀 Rust 项目 .gitignore - 多语言模板项目专用配置
# =============================================================================
# 全面的Git忽略文件配置，支持Rust、Python、JavaScript/TypeScript等多语言开发
# 涵盖现代开发工具链的临时文件和构建产物

# ==========================================================================
#                           🦀 Rust 相关文件
# ==========================================================================

# Rust 编译输出目录
/target/
target/

# Rust 编译器崩溃报告
rustc-ice-*.txt

# rustfmt 备份文件
**/*.rs.bk

# cargo-fuzz 生成的文件
fuzz/target/
fuzz/artifacts/

# criterion 基准测试输出
criterion/

# 单元测试和集成测试的临时文件
tests/tmp/
test-results/

# LLVM 分析数据
*.profraw
*.profdata

# Rust 覆盖率报告
lcov.info
coverage/
tarpaulin-report.html

# ==========================================================================
#                      🎯 编译目标平台相关文件
# ==========================================================================

# 通用二进制文件和执行文件
*.exe
*.dll
*.so
*.dylib
*.a
*.lib

# Rust 交叉编译目标目录
target/*/
target/debug/
target/release/
target/wasm32-*/
target/aarch64-*/
target/x86_64-*/
target/arm-*/

# ==========================================================================
#                           🍎 macOS 平台
# ==========================================================================

# macOS 应用程序包
*.app/
*.bundle/

# macOS 安装包
*.pkg
*.dmg
*.mpkg

# macOS 框架
*.framework/

# Xcode 构建文件
DerivedData/
*.xcarchive/
*.dSYM/

# ==========================================================================
#                           🪟 Windows 平台
# ==========================================================================

# Windows 可执行文件
*.exe
*.msi
*.msix
*.appx

# Windows 库文件
*.dll
*.lib
*.pdb

# Visual Studio 相关
*.vcxproj.user
*.suo
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.tlb
*.tlh
*.bak
*.cache
*.ilk
*.log
[Bb]in
[Dd]ebug*/
[Rr]elease*/

# ==========================================================================
#                           🐧 Linux 平台
# ==========================================================================

# Linux 可执行文件（通常无扩展名）
/target/release/template
/target/debug/template

# Linux 包文件
*.deb
*.rpm
*.tar.xz
*.tar.gz
*.tar.bz2
*.snap
*.flatpak
*.appimage

# Linux 库文件
*.so
*.so.*
*.a

# ==========================================================================
#                           📱 iOS 平台
# ==========================================================================

# iOS 应用程序包
*.ipa
*.app

# Xcode 项目文件
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
*.xcuserstate
project.xcworkspace/
xcuserdata/

# CocoaPods
Pods/
Podfile.lock

# Carthage
Carthage/Build/

# Swift Package Manager
.swiftpm/

# ==========================================================================
#                           🤖 Android 平台
# ==========================================================================

# Android 应用程序包
*.apk
*.aab
*.ap_
*.dex

# Android Gradle 构建文件
.gradle/
build/
captures/
.externalNativeBuild/
.cxx/

# Android Studio
*.iml
.idea/
local.properties

# Android NDK
obj/
libs/

# ProGuard
proguard/

# ==========================================================================
#                           🌐 Web/WASM 平台
# ==========================================================================

# WebAssembly 文件
*.wasm
*.wat

# wasm-pack 生成文件
pkg/
www/dist/
www/node_modules/

# Webpack 构建文件
dist/
.webpack/

# Web 服务器文件
.cache/
public/

# Emscripten 相关
*.js.mem
*.js.symbols
*.wast
a.out.js
a.out.wasm

# ==========================================================================
#                          📺 HarmonyOS 平台
# ==========================================================================

# HarmonyOS 应用程序包
*.hap
*.app

# DevEco Studio
.idea/
*.iml
local.properties

# HarmonyOS 构建文件
build/
.hvigor/
oh_modules/

# HarmonyOS 签名文件
*.p7b
*.cer
*.p12

# ==========================================================================
#                      🔄 交叉编译和工具链
# ==========================================================================

# Rust 交叉编译缓存
.cargo/registry/
.cargo/git/

# 工具链临时文件
*.orig
*.tmp
*.temp

# 构建脚本生成的文件
build.rs.tmp
OUT_DIR/

# bindgen 生成的文件
*_bindings.rs

# cbindgen 生成的文件
bindings.h

# ==========================================================================
#                          🌐 Web 前端相关
# ==========================================================================

# Node.js 依赖
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Web 构建产物
dist/
build/
.next/
.nuxt/
.svelte-kit/

# 包管理器锁文件（可选，根据团队决定）
# package-lock.json
# yarn.lock

# ==========================================================================
#                           🐍 Python 相关
# ==========================================================================

# Python 字节码
__pycache__/
*.py[cod]
*$py.class

# Python 虚拟环境
venv/
env/
.env/
.venv/

# Python 分发和构建
dist/
build/
*.egg-info/

# Jupyter Notebook
.ipynb_checkpoints/

# ==========================================================================
#                         💻 IDE 和编辑器文件
# ==========================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# IntelliJ IDEA 系列
.idea/
*.iml
*.ipr
*.iws

# Eclipse
.project
.classpath
.settings/

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc

# ==========================================================================
#                         🖥️ 操作系统文件
# ==========================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.nfs*

# ==========================================================================
#                        🔧 开发工具生成文件
# ==========================================================================

# 环境变量文件
.env
.env.local
.env.*.local

# 日志文件
*.log
logs/
log/

# 临时文件
*.tmp
*.temp
*.bak
*.swp
*.cache

# 压缩文件
*.zip
*.tar.gz
*.rar

# 密钥和证书文件
*.pem
*.key
*.crt
id_rsa*

# ==========================================================================
#                        📊 分析和调试文件
# ==========================================================================

# 性能分析文件
*.out
perf.data*
massif.out.*

# 调试信息
*.dSYM/
*.su
*.idb
*.pdb

# 内存检查工具
vgcore.*
callgrind.out.*

# ==========================================================================
#                         🚀 CI/CD 和部署文件
# ==========================================================================

# Docker
.dockerignore

# Kubernetes
*.yaml.bak

# 部署密钥
deploy_key*

# ==========================================================================
#                        📝 文档和工具生成文件
# ==========================================================================

# 覆盖率报告
coverage.xml
*.cover

# 基准测试结果
bench-results/

# ==========================================================================
#                           🔍 安全检查工具
# ==========================================================================

# detect-secrets 基线文件更新
.secrets.baseline.tmp

# gitleaks 缓存
.gitleaks-cache

# ==========================================================================
#                        📦 包管理和依赖
# ==========================================================================

# Rust 本地依赖（如果使用path依赖的话）
# Cargo.lock  # 对于应用程序通常要保留，对于库通常要忽略

# NPM 缓存
.npm/

# Yarn 缓存
.yarn/cache/
.yarn/install-state.gz

# ==========================================================================
#                           🧪 测试相关
# ==========================================================================

# 测试输出
test-output/
test_results/

# 集成测试临时文件
integration-tests/tmp/

# ==========================================================================
#                          🎯 项目特定文件
# ==========================================================================

# 本地配置文件
local.toml
local.yaml
config.local.*

# 用户特定的运行配置
run-*
